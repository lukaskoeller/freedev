code {
  max-inline-size: 100%;
  overflow-x: auto;
  white-space: pre;
}

:is(.visually-hidden, .sr-only) {
  all: unset;
  pointer-events: none;
  inline-size: 0;
  block-size: 0;
  overflow: hidden;
}

.fd-stack {
  --_fd-stack-gap: var(--fd-stack-gap, var(--size-3));
  --_fd-stack-justify-items: var(--fd-stack-justify-items, stretch);

  display: grid;
  gap: var(--_fd-stack-gap);
  justify-items: var(--_fd-stack-justify-items);
}

.fd-label, fieldset > legend {
  --_fd-label-color: var(--fd-label-color, var(--primary-color-5));
  --_fd-label-text-transform: var(--fd-label-text-transform, uppercase);
  --_fd-label-font-weight: var(--fd-label-font-weight, var(--font-weight-6));
  --_fd-label-font-size: var(--fd-label-font-size, var(--font-size-1));

  font-weight: var(--_fd-label-font-weight);
  font-size: var(--_fd-label-font-size);
  text-transform: var(--_fd-label-text-transform);
  color: var(--_fd-label-color);
}

.fd-caption {
  font-size: var(--font-size-0);
  line-height: var(--font-lineheight-1);
}

.fd-error {
  margin-block-start: var(--size-1);
  color: var(--color-status-error);

  &:empty {
    display: none;
  }
}
}

.fd-ram-grid {
  --_fd-ram-grid-gap-row: var(--fd-ram-grid-gap-row, var(--_fd-ram-grid-gap));
  --_fd-ram-grid-gap-column: var(--fd-ram-grid-gap-column, var(--_fd-ram-grid-gap));
  --_fd-ram-grid-gap: var(--fd-ram-grid-gap, var(--size-fluid-2));
  --_fd-ram-grid-min-width: var(--fd-ram-grid-min-width, 150px);


  display: grid;
  row-gap: var(--_fd-ram-grid-gap-row);
  column-gap: var(--_fd-ram-grid-gap-column);
  grid-template-columns:
    repeat(
      auto-fit,
      minmax(min(var(--_fd-ram-grid-min-width), 100%), 1fr)
    );
}

.fd-gallery {
  --_fd-gallery-gap: var(--fd-gallery-gap, var(--size-6));
  --_fd-gallery-padding-block: var(--fd-gallery-padding-block, 0);

  display: flex;
  gap: calc(var(--_fd-gallery-gap) / 2);
  margin: 0;
  max-inline-size: 100%;
  block-size: var(--fd-gallery-size, auto);
  padding-inline-start: var(--fd-gallery-padding-inline-start, var(--fd-gallery-padding-inline, var(--_fd-gallery-gap, var(var(--fd-gallery-gap)))));
  padding-inline-end: var(--fd-gallery-padding-inline-end, var(--fd-gallery-padding-inline, var(--_fd-gallery-gap, var(--fd-gallery-gap))));
  padding-block-start: calc(var(--fd-gallery-padding-block) / 2);
  padding-block-end: calc(var(--fd-gallery-padding-block) / 2);
  overflow-x: auto;
  overscroll-behavior-inline: contain;
  scroll-snap-type: inline mandatory;
  scroll-padding-left: var(--_fd-gallery-gap);
  scroll-padding-right: var(--_fd-gallery-gap);
  scroll-padding-inline: var(--_fd-gallery-gap);
  list-style: none;

  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }

  & > * {
    display: inline-block;
    scroll-snap-align: start;
    flex-shrink: 0;
  }
}

.fd-card {
  --_fd-card-background-color: var(--fd-card-background-color, var(--color-surface-1));
  --_fd-card-color: var(--fd-card-color, var(--text-1));
  --_fd-card-border-color: var(--fd-card-border-color, var(--color-border));
  --_fd-card-shadow: var(--fd-card-shadow, var(--shadow-3));
  --_fd-card-padding-inline: var(--fd-card-padding-inline, var(--size-3));
  --_fd-card-padding-block: var(--fd-card-padding-block, var(--size-7));

  &[data-size="sm"] {
    --_fd-card-padding-inline: var(--fd-card-padding-inline, var(--size-5));
    --_fd-card-padding-block: var(--fd-card-padding-block, var(--size-3));
  }

  &[data-variant="inverted"] {
    --fd-card-background-color: var(--color-surface-2-inverted);
    --fd-card-color: var(--text-1-inverted);
    --fd-info-text-color: var(--text-2-inverted);
    --fd-card-border-color: var(--color-border-inverted);
  }

  inline-size: 100%;
  display: inline-block;
  box-sizing: border-box;
  padding-inline: var(--_fd-card-padding-inline);
  padding-block: var(--_fd-card-padding-block);
  color: var(--_fd-card-color);

  appearance: none;
  border: 1px solid var(--_fd-card-border-color);

  background-color: var(--_fd-card-background-color);
  border-radius: var(--radius-conditional-3);
  box-shadow: var(--_fd-card-shadow);

  @media (--large-mobile) {
    --_fd-card-padding-inline: var(--fd-card-padding-inline, var(--size-6));
  }

  @media (--small-desktop) {
    --_fd-card-padding-inline: var(--fd-card-padding-inline, var(--size-8));
  }
}

.fd-info-text {
  --_fd-info-text-color: var(--fd-info-text-color, var(--text-2));
  /* @todo use var instead? */
  /* font-size: var(--font-size-1); */
  font-size: 0.875rem;
  color: var(--_fd-info-text-color);
}

.fd-button {
  --_fd-button-background-color: var(--fd-button-background-color, var(--color-link));
  --_fd-button-background-color--hover: var(--fd-button-background-color--hover, var(--color-link-hover));
  --_fd-button-color: var(--fd-button-color, var(--color-on-primary));
  --_fd-button-color--hover: var(--fd-button-color--hover, var(--color-on-primary));
  --_fd-button-border-color: var(--fd-button-border-color, var(--color-link));
  
  --_fd-button-font-size: var(--fd-button-font-size, var(--font-size-1));
  --_fd-button-padding-inline: var(--fd-button-padding-inline, var(--size-6));
  --_fd-button-block-size: var(--fd-button-block-size, calc(var(--size-6) + var(--_fd-button-font-size)));
  --_fd-button-line-height: var(--fd-button-line-height, var(--font-lineheight-5));

  --_fd-button-width: var(--fd-button-width, fit-content);

  position: relative;
  box-sizing: inherit;
  inline-size: var(--_fd-button-width, fit-content);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: var(--space-3);      

  margin: 0;
  padding: 0;
  min-block-size: var(--_fd-button-block-size);
  padding-inline: var(--_fd-button-padding-inline);

  font-weight: var(--font-weight-6);
  font-size: var(--_fd-button-font-size);
  line-height: var(--_fd-button-line-height);
  text-align: center;
  color: var(--_fd-button-color);

  appearance: none;
  border: none;
  text-decoration: none;

  background-color: var(--_fd-button-background-color);
  border-radius: var(--radius-round);
  overflow: hidden;
  
  touch-action: manipulation;
  cursor: pointer;

  &:hover {
    background-color: var(--_fd-button-background-color--hover);
    color: var(--_fd-button-color--hover);
  }

  &[data-variant="light"] {
    --_fd-button-background-color: var(--fd-button-background-color, transparent);
    --_fd-button-background-color--hover: var(--fd-button-background-color--hover, transparent);
    --_fd-button-color: var(--fd-button-color, var(--text-1));
    --_fd-button-color--hover: var(--fd-button-color--hover, var(--text-1));
    outline: var(--border-size-1) solid var(--_fd-button-border-color);
  }

  &[data-variant="monotone"] {
    --_fd-button-background-color: var(--fd-button-background-color, var(--color-surface-2));
    --_fd-button-background-color--hover: var(--fd-button-background-color--hover, var(--color-surface-2));
    --_fd-button-color: var(--fd-button-color, var(--color-link));
    --_fd-button-color--hover: var(--fd-button-color--hover, var(--color-link));
  }

  &[data-variant="stealth"] {
    --_fd-button-background-color: var(--fd-button-background-color, transparent);
    --_fd-button-background-color--hover: var(--fd-button-background-color--hover, transparent);
    --_fd-button-color: var(--fd-button-color, var(--color-primary-base));
    --_fd-button-color--hover: var(--fd-button-color--hover, var(--color-primary-base));
  }

  &[data-size="sm"] {
    --_fd-button-padding-inline: var(--fd-button-padding-inline, var(--size-3));
    --_fd-button-block-size: var(--fd-button-block-size, var(--size-7));
    --_fd-button-font-size: var(--fd-button-font-size, var(--font-size-0));
  }

  &[data-expand] {
    --_fd-button-width: var(--fd-button-width, 100%);
  }

  &[data-icon] {
    --_fd-button-padding-inline: var(--fd-button-padding-inline, 0);
    --_fd-button-width: var(--fd-button-width, var(--fd-button-block-size));
  }

  &:disabled {
    pointer-events: none;
  }

  /* @todo how to handle loading state? */
  /* &[data-status="loading"] > [name="status"] > fd-icon {
    animation: var(--animation-spin);
    animation-duration: 1.1s;
  } */
}

input:is(.fd-input, :-webkit-autofill) {
  --_fd-input-background-color: var(--fd-input-background-color, var(--color-surface-2));
  --_fd-input-text-transform: uppercase;
  --_fd-input-font-weight: var(--fd-input-font-weight, var(--font-weight-6));
  --_fd-input-font-size: var(--fd-input-font-size, var(--font-size-0));
  --_fd-input-border-color: var(--fd-input-border-color, var(--color-border));

  position: relative;
  min-width: 0;
  border: var(--border-size-1) solid var(--_fd-input-border-color);
  border-radius: var(--radius-2);
  background-color: var(--_fd-input-background-color);
  padding-inline: var(--size-4);
  padding-block: var(--size-3);

  font-family: var(--font-sans);
  font-weight: var(--font-weight-5);
  font-size: var(--font-size-1);
  color: var(--primary-color-base);

  &[aria-invalid="true"] {
    --_fd-input-border-color: var(--fd-input-border-color, var(--color-status-error));
    border: var(--border-size-1) solid var(--_fd-input-border-color);
  }

  &::placeholder {
    color: var(--color-accent-6);
  }
}

.fd-checkbox-button {
  position: relative;
  display: inline-grid;
  justify-items: center;
  grid-template: "main main" 1fr / 1fr;

  & > .label {
    grid-area: main;
    pointer-events: none;
    display: flex;
    align-items: center;
    gap: var(--size-2);
    padding-block: var(--size-2);
    padding-inline: var(--size-3);
  }

  & > input[type="checkbox"] {
    display: block;
    grid-area: main;
    inline-size: 100%;
    block-size: 100%;
    appearance: none;
    background: none;
    margin: 0;
    padding: 0;

    background-color: var(--surface-2);
    border-radius: var(--radius-2);

    &:checked {
      background-color: var(--surface-2-inverted);

      & + div {
        color: var(--text-1-inverted);
      }
    }
  }
}

.fd-radio-button {
  position: relative;
  display: inline-grid;
  grid: "radio label" auto
        / auto 1fr;
  gap: var(--size-2);
  justify-items: center;
  align-items: center;
  padding-block: var(--size-2);
  padding-inline: var(--size-3);
  background-color: var(--surface-2);
  border-radius: var(--radius-2);

  & > div {
    grid-area: label;
    pointer-events: none;
  }
  
  & > input[type="radio"] {
    accent-color: var(--color-link);
    background-color: var(--surface-2);
    grid-area: radio;
    margin: 0;
    padding: 0;
  }
}

fieldset:focus-within {
  border-color: var(--color-link);
}

.fd-input-group {
  display: flex;
  flex-wrap: wrap;
  gap: var(--size-2);
}